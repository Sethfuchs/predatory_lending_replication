cffit
summary(cffit)
cforest?
df
?cforect
?cforest
plot(original.lalonde, pch=16, col="blue", main="Matrix Scatterplot of Income, Education, Women and Prestige")
p.value_with_degree
p.value_no_degree
observed_treatment_effect_no_degree
observed_treatment_effect_with_degree
p.value_with_degree
density.plot <- plot(density(mean_diff_with_degree))
abline(v = observed_treatment_effect_with_degree, lwd = 3, col = "blue")
p.value_all
# store the mean differences when looking at subset: no degree
mean_diff_no_degree <- NA
for(i in 1:10000){
list <- experiment(lalonde.without_hs$treat)
treat_no_degree <-unlist(list[1])
control_no_degree <-unlist(list[2])
mean_diff_no_degree[i] <- mean(lalonde.without_hs[treat_no_degree,]$re78)-mean(lalonde.without_hs[control_no_degree,]$re78)
}
## Show ATE for: no degree observations
controlled_no_degree <- subset(lalonde.without_hs, treat==0)
observed_treatment_effect_no_degree <- mean(treated_with_nodegree$re78)- mean(controlled_no_degree$re78)
observed_treatment_effect_no_degree
# Significant?
p.value_no_degree <- length(mean_diff_no_degree[mean_diff_no_degree>=observed_treatment_effect_no_degree])/length(mean_diff_no_degree)
p.value_no_degree
observed_treatment_effect_no_degree
observed_treatment_effect_with_degree
full.forest
varImpPlot(full.forest)
varImpPlot(forest.with_degree)
varImpPlot(forest.with_nodegree)
forest.with_nodegree
forest.with_nodegree <- randomForest(re78 ~.,data = lalonde.without_hs, importance = TRUE)
forest.with_nodegree
forest.with_degree
full.forest
summary(model1)
summary(model_without_hs)
summary(model_with_hs)
model2 <- lm(re78 ~ age + treat + educ + black + re74 + re75)
summary(model2)
mean(treated_with_degree$re78) - mean(countfact_pred.treated.with_degree)
mean(treated_with_nodegree$re78)- mean(countfact_pred.treated.with_nodegree)
?predict
summary(treat.fit)
summary(model1)
summary(model_without_hs)
summary(model_with_hs)
confint(model_with_hs, "treat", level = 0.95)
confint(model_without_hs, "treat", level = 0.95)
full.forest <- randomForest(re78 ~ ., data = original.lalonde, importance = TRUE)
varImpPlot(full.forest)
forest.with_nodegree <- randomForest(re78 ~.,data = lalonde.without_hs, importance = TRUE)
forest.with_nodegree
importance(forest.with_degree)
importance(forest.with_nodegree)
forest.with_degree <- randomForest(re78 ~., data = lalonde.with_hs, mtry = 5, importance = TRUE)
forest.with_degree
varImpPlot(forest.with_degree)
mean(treated_with_degree$re78) - mean(countfact_pred.treated.with_degree)
mean(treated_with_nodegree$re78)- mean(countfact_pred.treated.with_nodegree)
forest.with_nodegree
forest.with_degree
forest.with_degree <- randomForest(re78 ~., data = lalonde.with_hs, importance = TRUE)
forest.with_degree
forest.with_degree <- randomForest(re78 ~., data = lalonde.with_hs, importance = TRUE)
forest.with_degree
p.value_all
p.value_all <- length(mean_diff_all[mean_diff_all >= observed_treatment_effect_all])/length(mean_diff_all)
p.value_all
p.value_with_degree
p.value_no_degree
library(haven)
nsw_1_ <- read_dta("~/Downloads/nsw (1).dta")
View(nsw_1_)
library(haven)
nsw_dw <- read_dta("~/Downloads/nsw_dw.dta")
View(nsw_dw)
?GenMatch
?MatchBalance
library(Matching)
?MatchBalance
attach(nsw_1_)
nsw_1_re_78_mean <- mean(nsw_1_re_78_mean[["re78"]])
nsw_1_re_78_mean <- mean(nsw_1_[["re78"]])
nsw_1_re_78_mean
s
diff_means <- abs(nsw_1_re_78_mean - nsw_dw_re_78_mean)
nsw_dw_re_78_mean
attach(nsw_dw)
attach(nsw_1_)
attach(nsw_1_)
nsw_1_re_78_mean <- mean(nsw_1_[["re78"]])
nsw_1_re_78_mean
attach(nsw_dw)
nsw_dw_re_78_mean <- mean(nsw_dw[["re78"]])
nsw_dw_re_78_mean
diff_means <- abs(nsw_1_re_78_mean - nsw_dw_re_78_mean)
diff_means
attach(nsw_1_)
attach(nsw_dw)
library(haven)
nsw_dw <- read_dta("~/Downloads/nsw_dw.dta")
View(nsw_dw)
library(haven)
nsw_1_ <- read_dta("~/Downloads/nsw (1).dta")
View(nsw_1_)
apply([-1], 1, function(x) t.test(x[1:3], x[4:6])$p.value)
attach(nsw_dw)
attach(nsw_1_)
apply(nsw_1_[-1], 1, function(x) t.test(x[1:10]$p.value)
print apply(nsw_1_[-1], 1, function(x) t.test(x[1:10]$p.value)
print(apply(nsw_1_[-1], 1, function(x) t.test(x[1:10]$p.value))
?t.test
?t.test
\
?t.test
library(haven)
nsw_dw <- read_dta("~/Downloads/nsw_dw.dta")
View(nsw_dw)
attach(nsw_dw)
lapply(nsw_dw[,c("education", "age")], function(x) t.test(x ~ ., data = nsw_dw, var.equal = TRUE))
lapply(nsw_dw[,c("education", "age")], function(x) t.test(x ~ ., data = nsw_dw, var.equal = TRUE))
lapply(nsw_dw[,c("education", "age")], function(x) t.test(x ~ nsw_dw$treat, var.equal = TRUE))
$education
lapply(nsw_dw[,c("education", "age")], function(x) t.test(x ~ nsw_dw$re78, var.equal = TRUE))
bal_testing2 <- apply(
nsw_dw[, sapply(nsw_dw, is.numeric)], MARGIN = 2, function(x) {t.test(x, alternative = c("t"), conf.level = 0.95)}
)
bal_testing2
?apply
?t.test
bal_testing2 <- apply(
nsw_dw[, sapply(nsw_dw, is.numeric)], MARGIN = 2,
function(x) {
t.test(x, alternative = c("t"), conf.level = 0.95)
print(t.test(x, alternative = c("t"), conf.level = 0.95))
}
)
nsw_dw[,]
nsw_dw[,1]
nsw_dw[,1"3"]
nsw_dw[,1:3]
bal_testing2
library(GenMatch)
install.packages("GenMatch")
bal_testing2 <- apply(
nsw_dw[, sapply(nsw_dw, is.numeric)], MARGIN = 2,
function(x) {
t.test(x ~ nsw_dw$treat, alternative = c("t"), conf.level = 0.95)
}
)
t.test(x ~ nsw_dw$re78, alternative = c("t"), conf.level = 0.95)
bal_testing2
GenMatching <- GenMatch(nsw_lal$treat, nsw_lal[,3:9], estimand = "ATT",
wait.generations = 4, fit.func="pvals", paired = TRUE)
lapply(nsw_dw[,c("education", "age")], function(x) t.test(x ~ nsw_dw$re78, var.equal = TRUE))
install.packages(GenMatch)
install.packages("GenMatch")
R.Version()
library(Matching)
demo(GerberGreenImai)
library(rbounds)
View(nsw_dw)
View(GerberGreenImai)
setwd("~/workspace/cs112/final project/segregation subprime/provided data")
setwd("~/workspace/cs112/final project/segregation subprime/provided data")cbsadata <- read.csv("cbsa_data_(publicview).csv", stringsAsFactors=FALSE)
setwd("~/workspace/cs112/final project/segregation subprime/provided data")
cbsadata <- read.csv("cbsa_data_(publicview).csv", stringsAsFactors=FALSE)
View(cbsadata)
cbsadata <- read.csv("cbsa_data_(publicview)-no-head1.csv", header=TRUE, stringsAsFactors=FALSE)
View(cbsadata)
install.packages("Zelig")
library(Matching)
install.packages("MatchIt")
library(cem)
install.packages("cem")
library(cem)
library(cem)
vignette("cem")
subprime_rate <- vector(length=nrow(cbsadata))
for (i in 1:nrow(cbsadata)) {
splrate <- cbsadata$subprime_count[i]/cbsadata$loans_count[i]
subprime_rate[i] <- splrate
}
cbsadata <- cbind(cbsadata[1:17],subprime_rate,cbsadata[18:33])
cbsadata$overlap_index <- as.numeric(cbsadata$overlap_index) #### convert the overlap index to a number
dim(cbsadata)
cbsadata[34:35, "bhisp"]<-NA
dim(cbsadata)
cbsadata$bhisp<-cbsadata$pblack2000+cbsadata$phisp2000
head(cbsadata)
matchdata <- cbind(cbsadata[1], cbsadata[6], cbsadata[18], cbsadata[19], cbsadata[8], cbsadata[23], cbsadata[24:27], cbsadata[29:31], cbsadata[32], cbsadata[34:35])
View(matchdata)
summary(cbsadata$bh_w_diss)
diss_quart <- vector(length=nrow(matchdata))
for (i in 1:nrow(matchdata)){
if(matchdata[i,5] >= 0.6323){
diss <- 1} else {
if(matchdata[i,5] >= 0.5410){
diss <- 0.75} else {
if(matchdata[i,5] >= 0.4808){
diss <- .5} else {
diss <- 0.25}}}
diss_quart[i] <- diss}
matchdata <- cbind(matchdata[1:4],diss_quart,matchdata[5:16])
quantile(cbsadata$bh_w_diss, seq(0,1,0.2))
diss_quant <- vector(length=nrow(matchdata))
for (i in 1:nrow(matchdata)){
if(matchdata[i,6] >= 0.5817562){
diss <- 1} else {
if(matchdata[i,6] < 0.4627850){
diss <-0} else {
diss <- 2}}
diss_quant[i] <- diss}
matchdata[1,6]
head(matchdata[,6])
matchdata <- cbind(matchdata[1:5],diss_quant,matchdata[6:17])
matchdata.quant <- subset(matchdata, matchdata$diss_quant!=2) #### remove the middle quintile
View(matchdata.quant)
matchquant2 <- as.data.frame(cbind(matchdata.quant[1:2], matchdata.quant[4], matchdata.quant[6], matchdata.quant[9], matchdata.quant[11], matchdata.quant[16:18]))
View(matchquant2)
View(matchdata)
cem.match.quant <- cem(treatment="diss_quant", data = matchquant2, cutpoints=list(bhisp=4, ratio_hs_hu2000=4), drop=c("cbsa","overlap_index","lnfcrate","diss_quant", "lnpop2008","ratio_boom_hist","lnmedhhinc"))
cem.match.quant
pre.imbalance <- imbalance(group=matchquant2$diss_quant, data=matchquant2, drop=c("cbsa","overlap_index","diss_quant","lnfcrate", "lnpop2008","ratio_boom_hist","lnmedhhinc"))
pre.imbalance
pre.imbalance <- imbalance(group=matchquant2$diss_quant, data=matchquant2, drop=c("cbsa","overlap_index","diss_quant","lnfcrate", "lnpop2008","ratio_boom_hist","lnmedhhinc"))
overlap_index
matchquant2 <- as.data.frame(cbind(matchdata.quant[1:2], matchdata.quant[4], matchdata.quant[6], matchdata.quant[9], matchdata.quant[11], matchdata.quant[16:18]))
View(cbsadata)
View(cbsadata)
cbsadata <- read.csv("cbsa_data_(publicview)-no-head1.csv", header=TRUE, stringsAsFactors=FALSE)
View(cbsadata)
cbsadata <- read.csv("cbsa_data_(publicview)-no-head1.csv", header=TRUE, stringsAsFactors=FALSE)
View(cbsadata)
subprime_rate <- vector(length=nrow(cbsadata))
for (i in 1:nrow(cbsadata)) {
# the subprime loan rate is the amount of sub prime loans given, divided by total loans given
splrate <- cbsadata$subprime_count[i]/cbsadata$loans_count[i]
subprime_rate[i] <- splrate
}
cbsadata <- cbind(cbsadata[1:17],subprime_rate,cbsadata[18:33])
cbsadata$overlap_index <- as.numeric(cbsadata$overlap_index)
dim(cbsadata)
cbsadata[34:35, "bhisp"]<-NA
cbsadata[34:35, "bhisp"]<-NA
dim(cbsadata)
cbsadata$bhisp<-cbsadata$pblack2000+cbsadata$phisp2000
head(cbsadata)
cbsadata[6]
colnames(cbsadata[6])
colnames(cbsadata[18])
colnames(cbsadata[19])
colnames(cbsadata[8])
colnames(cbsadata[23])
matchdata <- cbind(cbsadata$cbsa, cbsadata$overlap_index, cbsadata$subprime_rate, cbsadata$lnfcrate, cbsadata$bh_w_diss, cbsadata$pcollege, cbsadata[24:27], cbsadata[29:31], cbsadata[32], cbsadata[34:35])
View(matchdata)
summary(cbsadata$bh_w_diss)
diss_quart <- vector(length=nrow(matchdata))
for (i in 1:nrow(matchdata)){
if(matchdata[i,5] >= 0.6323){
diss <- 1} else {
if(matchdata[i,5] >= 0.5410){
diss <- 0.75} else {
if(matchdata[i,5] >= 0.4808){
diss <- .5} else {
diss <- 0.25}}}
diss_quart[i] <- diss
}
matchdata <- cbind(matchdata[1:4],diss_quart,matchdata[5:16])
quantile(cbsadata$bh_w_diss, seq(0,1,0.2))
diss_quant <- vector(length=nrow(matchdata))
for (i in 1:nrow(matchdata)){
if(matchdata[i,6] >= 0.5817562){
diss <- 1} else {
if(matchdata[i,6] < 0.4627850){
diss <-0} else {
diss <- 2}}
diss_quant[i] <- diss
}
matchdata <- cbind(matchdata[1:5],diss_quant,matchdata[6:17])
matchdata.quant <- subset(matchdata, matchdata$diss_quant!=2)
View(matchdata.quant)
matchquant2 <- as.data.frame(cbind(matchdata.quant[1:2], matchdata.quant[4], matchdata.quant[6], matchdata.quant[9], matchdata.quant[11], matchdata.quant[16:18]))
View(matchquant2)
?cem
cem.match.quant <- cem(treatment="diss_quant", data = matchquant2, cutpoints=list(bhisp=4, ratio_hs_hu2000=4), drop=c("cbsa","overlap_index","lnfcrate","diss_quant", "lnpop2008","ratio_boom_hist","lnmedhhinc"))
cem.match.quant
?imbalance
pre.imbalance <- imbalance(group=matchquant2$diss_quant, data=matchquant2, drop=c("matchquant2$cbsa","matchquant2$overlap_index","matchquant2$diss_quant","matchquant2$lnfcrate", "matchquant2$lnpop2008","matchquant2$ratio_boom_hist","matchquant2$lnmedhhinc"))
pre.imbalance
pre.imbalance2 <- imbalance(group=matchquant2$diss_quant, data=matchquant2, drop=c("cbsa","overlap_index","diss_quant","lnfcrate", "ratio_boom_hist"))
pre.imbalance2
cem.match.quant
cem.match.quant$matched
cem.match.quant.data <- cbind(matchquant2, cem.match.quant$matched)
cem.match.quant.data <- subset(cem.match.quant.data, cem.match.quant$matched==TRUE)
cem.match.quant.data
post.imbalance <- imbalance(group=cem.match.quant.data$diss_quant, data=cem.match.quant.data, drop=c("cbsa","overlap_index","diss_quant","lnfcrate","ratio_boom_hist","cem.match.quant$matched"))
post.imbalance
?att
cem.model.quant.diss <- att(obj=cem.match.quant, formula= overlap_index ~ bh_w_diss + lnpop2008 + lnmedhhinc + west + mw + south, data=matchdata.quant, model = "linear")
matchdata <- cbind(cbsadata[1], cbsadata[6], cbsadata[18], cbsadata[19], cbsadata[8], cbsadata[23], cbsadata[24:27], cbsadata[29:31], cbsadata[32], cbsadata[34:35])
summary(cbsadata$bh_w_diss)
diss_quart <- vector(length=nrow(matchdata))
for (i in 1:nrow(matchdata)){
if(matchdata[i,5] >= 0.6323){
diss <- 1} else {
if(matchdata[i,5] >= 0.5410){
diss <- 0.75} else {
if(matchdata[i,5] >= 0.4808){
diss <- .5} else {
diss <- 0.25}}}
diss_quart[i] <- diss
}
matchdata <- cbind(matchdata[1:4],diss_quart,matchdata[5:16])
quantile(cbsadata$bh_w_diss, seq(0,1,0.2))
diss_quant <- vector(length=nrow(matchdata))
for (i in 1:nrow(matchdata)){
if(matchdata[i,6] >= 0.5817562){
diss <- 1} else {
if(matchdata[i,6] < 0.4627850){
diss <-0} else {
diss <- 2}}
diss_quant[i] <- diss
}
matchdata <- cbind(matchdata[1:5],diss_quant,matchdata[6:17])
matchdata.quant <- subset(matchdata, matchdata$diss_quant!=2)
matchdata.quant <- subset(matchdata, matchdata$diss_quant!=2)
matchquant2 <- as.data.frame(cbind(matchdata.quant[1:2], matchdata.quant[4], matchdata.quant[6], matchdata.quant[9], matchdata.quant[11], matchdata.quant[16:18]))
cem.match.quant <- cem(treatment="diss_quant", data = matchquant2, cutpoints=list(bhisp=4, ratio_hs_hu2000=4), drop=c("cbsa","overlap_index","lnfcrate","diss_quant", "lnpop2008","ratio_boom_hist","lnmedhhinc"))
cem.match.quant
pre.imbalance <- imbalance(group=matchquant2$diss_quant, data=matchquant2, drop=c("matchquant2$cbsa","matchquant2$overlap_index","matchquant2$diss_quant","matchquant2$lnfcrate", "matchquant2$lnpop2008","matchquant2$ratio_boom_hist","matchquant2$lnmedhhinc"))
pre.imbalance
?imbalance
pre.imbalance <- imbalance(group=matchquant2$diss_quant, data=matchquant2, drop=c("cbsa","overlap_index","diss_quant","lnfcrate", "lnpop2008","ratio_boom_hist","lnmedhhinc"))
pre.imbalance
pre.imbalance2 <- imbalance(group=matchquant2$diss_quant, data=matchquant2, drop=c("cbsa","overlap_index","diss_quant","lnfcrate", "ratio_boom_hist"))
pre.imbalance2
cem.match.quant.data <- cbind(matchquant2, cem.match.quant$matched)
cem.match.quant.data <- subset(cem.match.quant.data, cem.match.quant$matched==TRUE)
post.imbalance <- imbalance(group=cem.match.quant.data$diss_quant, data=cem.match.quant.data, drop=c("cbsa","overlap_index","diss_quant","lnfcrate","ratio_boom_hist","cem.match.quant$matched"))
post.imbalance
?att
cem.model.quant.diss <- att(obj=cem.match.quant, formula= overlap_index ~ bh_w_diss + lnpop2008 + lnmedhhinc + west + mw + south, data=matchdata.quant, model = "linear")
summary(cem.model.quant.diss)
xtable(summary(cem.model.quant.diss), digits=3)
library("xtable")
xtable(summary(cem.model.quant.diss), digits=3)
cem.model.quant.alt <- att(obj=cem.match.quant, formula= overlap_index ~ ratio_hs_hu2000 + ratio_boom_hist + bhisp + lnpop2008 + lnmedhhinc + west + mw + south, data=matchdata.quant, model = "linear")
summary(cem.model.quant.alt)
cem.model.quant.all <- att(obj=cem.match.quant, formula= overlap_index ~ bh_w_diss +ratio_hs_hu2000 + ratio_boom_hist + bhisp + lnpop2008 + lnmedhhinc + west + mw + south, data=matchdata.quant, model = "linear")
summary(cem.model.quant.all)
xtable(summary(cem.model.quant.all), digits=3)
cem.model.quant.diss <- att(obj=cem.match.quant, formula= lnfcrate ~ bh_w_diss + lnpop2008 + lnmedhhinc + west + mw + south, data=matchdata.quant, model = "linear")
summary(cem.model.quant.diss.rm)
cem.model.quant.diss.rm <- att(obj=cem.match.quant, formula= lnfcrate ~ bh_w_diss + lnpop2008 + lnmedhhinc + west + mw + south, data=matchdata.quant, model = "linear")
summary(cem.model.quant.diss.rm)
cem.model.quant.alt <- att(obj=cem.match.quant, formula= lnfcracte ~ ratio_hs_hu2000 + ratio_boom_hist + bhisp + lnpop2008 + lnmedhhinc + west + mw + south, data=matchdata.quant, model = "linear")
cem.model.quant.alt <- att(obj=cem.match.quant, formula= lnfcrate ~ ratio_hs_hu2000 + ratio_boom_hist + bhisp + lnpop2008 + lnmedhhinc + west + mw + south, data=matchdata.quant, model = "linear")
summary(cem.model.quant.alt)
cem.model.quant.all <- att(obj=cem.match.quant, formula= lnfcrate ~ bh_w_diss + ratio_hs_hu2000 + ratio_boom_hist + bhisp + lnpop2008 + lnmedhhinc + west + mw + south, data=matchdata.quant, model = "linear")
summary(cem.model.quant.all)
View(cbsadata)
?cem
View(cbsadata)
?Match
?Match
cem.match.quant
cem.match.quant <- cem(treatment="diss_quant", data = matchquant2, cutpoints=list(bhisp=4, ratio_hs_hu2000=4), drop=c("cbsa","overlap_index","lnfcrate","diss_quant", "lnpop2008","ratio_boom_hist","lnmedhhinc"))
cem.match.quant
pre.imbalance <- imbalance(group=matchquant2$diss_quant, data=matchquant2, drop=c("cbsa","overlap_index","diss_quant","lnfcrate", "ratio_boom_hist"))
pre.imbalance
View(matchquant2)
matchquant3 <- matchquant2
propensity.model <- glm(diss_quant ~ overlap_index + lnpop2008 + lnmedhhin + ratio_boom_hist + ratio_hs_hu2000 + bhisp,
family = binomial(link='logit'), data = matchquant3)
propensity.model <- glm(diss_quant ~ overlap_index + lnpop2008 + lnmedhhinc + ratio_boom_hist + ratio_hs_hu2000 + bhisp,
family = binomial(link='logit'), data = matchquant3)
View(matchquant3)
propensity.model$fitted
options("scipen" =100, "digits" = 4) # override R's tendency to use scientific notation
propensity.model$fitted
matchquant3 <- matchquant2
propensity.model <- glm(diss_quant ~ overlap_index + lnpop2008 + lnmedhhinc + ratio_boom_hist + ratio_hs_hu2000 + bhisp,
family = binomial(link='logit'), data = matchquant3)
propensity.model$fitted
propensity.model <- glm(diss_quant ~ lnmedhhinc + ratio_boom_hist + ratio_hs_hu2000 + bhisp,
family = binomial(link='logit'), data = matchquant3)
propensity.model <- glm(diss_quant ~ overlap_index + lnpop2008 + lnmedhhinc + ratio_boom_hist + ratio_hs_hu2000 + bhisp,
family = binomial(link='logit'), data = matchquant3)
propensity.model <- glm(diss_quant ~ lnpop2008 + lnmedhhinc + ratio_boom_hist + ratio_hs_hu2000 + bhisp,
family = binomial(link='logit'), data = matchquant3)
propensity.model$fitted
X  <- propensity.model$fitted
Tr  <- matchquant3$diss_quant
prop_match.out  <- Match(Tr=Tr, X=X)
summary(prop_match.out)
mb.prop  <- MatchBalance(diss_quant~lnpop2008 + lnmedhhinc + ratio_boom_hist + ratio_hs_hu2000 + bhisp,
data=matchquant3, match.out=prop_match.out, nboots=500)
propensity.model <- glm(diss_quant ~ lnmedhhinc + ratio_boom_hist + ratio_hs_hu2000 + bhisp,
family = binomial(link='logit'), data = matchquant3)
X  <- propensity.model$fitted
Tr  <- matchquant3$diss_quant
prop_match.out  <- Match(Tr=Tr, X=X)
summary(prop_match.out)
mb.prop  <- MatchBalance(diss_quant~lnpop2008 + lnmedhhinc + ratio_boom_hist + ratio_hs_hu2000 + bhisp,
data=matchquant3, match.out=prop_match.out, nboots=500)
propensity.model <- glm(diss_quant ~ lnpop2008 + lnmedhhinc + ratio_boom_hist + ratio_hs_hu2000 + bhisp,
family = binomial(link='logit'), data = matchquant3)
X  <- propensity.model$fitted
Tr  <- matchquant3$diss_quant
prop_match.out  <- Match(Tr=Tr, X=X)
summary(prop_match.out)
mb.prop  <- MatchBalance(diss_quant~lnpop2008 + lnmedhhinc + ratio_boom_hist + ratio_hs_hu2000 + bhisp,
data=matchquant3, match.out=prop_match.out, nboots=500)
propensity.scores <- predict(propensity.model, type = "response")
matchquant3$prop_scores <- propensity.scores
covariates <- c("bhisp", "ratio_hs_hu2000", "prop_scores")
X_all <- matchquant3[, covariates] # a dataframe containing just our covariate columns
View(X_all)
m.out <- Match(Tr=Tr, X=X_all)
summary(m.out)
mb.all  <- MatchBalance(diss_quant~lnpop2008 + lnmedhhinc + ratio_boom_hist + ratio_hs_hu2000 + bhisp,
data=matchquant3, match.out=m.out, nboots=500)
matchdata.quant <- matchdata.quant2
matchdata.quant2 <- matchdata.quant
propensity.model <- glm(diss_quant ~ bh_w_diss +ratio_hs_hu2000 + ratio_boom_hist + bhisp + lnpop2008 + lnmedhhinc + west + mw + south,
family = binomial(link='logit'), data = matchdata.quant2)
propensity.model <- glm(diss_quant ~ratio_hs_hu2000 + ratio_boom_hist + bhisp + lnpop2008 + lnmedhhinc + west + mw + south,
family = binomial(link='logit'), data = matchdata.quant2)
propensity.model <- glm(diss_quant ~ bh_w_diss + ratio_boom_hist + bhisp + lnpop2008 + lnmedhhinc + west + mw + south,
family = binomial(link='logit'), data = matchdata.quant2)
propensity.model <- glm(diss_quant ~ bh_w_diss +ratio_hs_hu2000 + ratio_boom_hist + bhisp + lnpop2008 + lnmedhhinc + mw + south,
family = binomial(link='logit'), data = matchdata.quant2)
propensity.model <- glm(diss_quant ~ bh_w_diss +ratio_hs_hu2000 + ratio_boom_hist + bhisp + lnpop2008 + lnmedhhinc,
family = binomial(link='logit'), data = matchdata.quant2)
propensity.model <- glm(diss_quant ~ratio_hs_hu2000 + ratio_boom_hist + bhisp + lnpop2008 + lnmedhhinc,
family = binomial(link='logit'), data = matchdata.quant2)
propensity.model <- glm(diss_quant ~ ratio_hs_hu2000 + ratio_boom_hist + bhisp + lnpop2008 + lnmedhhinc + west + mw + south,
family = binomial(link='logit'), data = matchdata.quant2)
propensity.model <- glm(diss_quant ~ ratio_hs_hu2000 + ratio_boom_hist + bhisp + lnpop2008 + lnmedhhinc + west + mw,
family = binomial(link='logit'), data = matchdata.quant2)
propensity.model <- glm(diss_quant ~ ratio_hs_hu2000 + ratio_boom_hist + bhisp + lnpop2008 + lnmedhhinc + west,
family = binomial(link='logit'), data = matchdata.quant2)
propensity.model <- glm(diss_quant ~ ratio_hs_hu2000 + ratio_boom_hist + bhisp + lnpop2008 + lnmedhhinc,
family = binomial(link='logit'), data = matchdata.quant2)
propensity.model <- glm(diss_quant ~ ratio_hs_hu2000 + ratio_boom_hist + bhisp + lnpop2008 + lnmedhhinc,
family = binomial(link='logit'), data = matchdata.quant2)
X  <- propensity.model$fitted
Tr  <- matchquant3$diss_quant
prop_match.out  <- Match(Tr=Tr, X=X)
summary(prop_match.out)
cat("The confidence interval for the TE is [",
(prop_match.out$est - 1.96*prop_match.out$se), ";",
prop_match.out$est + 1.96*prop_match.out$se, "]")
mb.prop  <- MatchBalance(diss_quant~ratio_hs_hu2000 + ratio_boom_hist + bhisp + lnpop2008 + lnmedhhinc,
data=matchdata.quant2, match.out=prop_match.out, nboots=500)
propensity.scores <- predict(propensity.model, type = "response")
matchquant3$prop_scores <- propensity.scores
covariates <- c("bhisp", "ratio_hs_hu2000", "lnpop2008", "ratio_boom_hist", "prop_scores")
X_all <- matchquant3[, covariates] # a dataframe containing just our covariate columns
m.out <- Match(Tr=Tr, X=X_all)
summary(m.out)
mb.all  <- MatchBalance(diss_quant~lnpop2008 + lnmedhhinc + ratio_boom_hist + ratio_hs_hu2000 + bhisp,
data=matchquant3, match.out=m.out, nboots=500)
?GenMatch
prop.genout <- GenMatch(Tr=Tr, X=X, BalanceMatrix=X_all, estimand="ATT",
pop.size=50, max.generations=20, wait.generations=3)
prop_gen.match.out <- Match(Y=Y, Tr=Tr, X=X, estimand="ATT", Weight.matrix=prop.genout)
Y  <- matchquant3$lnfcrate
prop.genout <- GenMatch(Tr=Tr, X=X, BalanceMatrix=X_all, estimand="ATT",
pop.size=50, max.generations=20, wait.generations=3)
prop_gen.match.out <- Match(Y=Y, Tr=Tr, X=X, estimand="ATT", Weight.matrix=prop.genout)
summary(prop_gen.match.out)
prop.gen.mb  <- MatchBalance(treat~age+education+black+hispanic+married+nodegree+re74+re75,
data=merged_data, match.out=prop_gen.match.out, nboots=500)
prop.gen.mb  <- MatchBalance(diss_quant~lnpop2008 + lnmedhhinc + ratio_boom_hist + ratio_hs_hu2000 + bhisp,
data=matchquant3, match.out=prop_gen.match.out, nboots=500)
all.genout <- GenMatch(Tr=Tr, X=X_all, estimand="ATT",
pop.size=50, max.generations=20, wait.generations=5)
all_gen.match.out <- Match(Y=Y, Tr=Tr, X=X_all, estimand="ATT", Weight.matrix=all.genout)
summary(all_gen.match.out)
all.gen.mb  <- MatchBalance(treat~age+education+black+hispanic+married+nodegree+re74+re75,
data=merged_data, match.out=all_gen.match.out, nboots=500)
all.gen.mb  <- MatchBalance(diss_quant~lnpop2008 + lnmedhhinc + ratio_boom_hist + ratio_hs_hu2000 + bhisp,
data=matchquant3, match.out=all_gen.match.out, nboots=500)
all_gen.match.out <- Match(Y=Y, Tr=Tr, X=X_all, estimand="ATT", Weight.matrix=all.genout)
summary(all_gen.match.out)
all.genout <- GenMatch(Tr=Tr, X=X_all, estimand="ATT",
pop.size=100, max.generations=30, wait.generations=10)
all_gen.match.out <- Match(Y=Y, Tr=Tr, X=X_all, estimand="ATT", Weight.matrix=all.genout)
summary(all_gen.match.out)
all.gen.mb  <- MatchBalance(diss_quant~lnpop2008 + lnmedhhinc + ratio_boom_hist + ratio_hs_hu2000 + bhisp,
data=matchquant3, match.out=all_gen.match.out, nboots=500)
all.genout <- GenMatch(Tr=Tr, X=X_all, estimand="ATT",
pop.size=200, max.generations=40, wait.generations=20)
all_gen.match.out <- Match(Y=Y, Tr=Tr, X=X_all, estimand="ATT", Weight.matrix=all.genout)
summary(all_gen.match.out)
all.gen.mb  <- MatchBalance(diss_quant~lnpop2008 + lnmedhhinc + ratio_boom_hist + ratio_hs_hu2000 + bhisp,
data=matchquant3, match.out=all_gen.match.out, nboots=500)
View(X_all)
propensity.model <- glm(diss_quant ~ bh_w_diss + ratio_hs_hu2000 + ratio_boom_hist + bhisp + lnpop2008 + lnmedhhinc + west + mw + south,
family = binomial(link='logit'), data = matchdata.quant2)
propensity.model <- glm(diss_quant ~ ratio_hs_hu2000 + ratio_boom_hist + bhisp + lnpop2008 + lnmedhhinc,
family = binomial(link='logit'), data = matchdata.quant2)
